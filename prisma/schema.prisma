datasource db {
  provider = "mysql"  // Cambia el proveedor según tu base de datos
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int       @id @default(autoincrement())
  fullname     String
  fulllastname String
  email        String    @unique
  username     String    @unique
  password     String
  foto         String?   // Campo opcional para foto
  estadoUsuario String?  // Estado opcional
  role         Role      @default(USER)  // Rol del usuario
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  // Relación con el modelo Aviso
  avisos       Aviso[]   // Un usuario puede tener múltiples avisos

  // Relación con Inventario
  inventario   Inventario[] // Un usuario puede agregar múltiples elementos al inventario
  
  // Relación con CalendarEvent
  calendarEvents CalendarEvent[] // Un usuario puede tener múltiples eventos de calendario
}

model Aviso {
  id           Int       @id @default(autoincrement())
  description  String    // Descripción del aviso
  date         DateTime  // Fecha del aviso
  read         Boolean   @default(false) // Indica si el aviso fue leído o no
  user         User      @relation(fields: [userId], references: [id]) // Relación con User
  userId       Int       // Foreign key a User
}

model Inventario {
  id_elemento    String    @id // Usamos String como ID único
  nombre_elemento String   // Nombre del elemento
  descripcion    String    // Descripción del elemento
  cantidad       Int       // Cantidad disponible
  ubicacion      String    // Ubicación del elemento
  tipo_elemento  String    // Tipo del elemento (Ej. equipo, herramienta, etc.)
  imagen         String?   // URL o ruta de la imagen del elemento
  categoria      String    // Categoría del elemento
  createdAt      DateTime  @default(now()) // Fecha de creación
  updatedAt      DateTime  @updatedAt      // Fecha de última actualización

  // Relación con User (Opcional, en caso de que un usuario pueda tener control sobre los elementos)
  user           User?     @relation(fields: [userId], references: [id])
  userId         Int?      // Relación opcional con usuario (nullable)
}

model CalendarEvent {
  id          Int       @id @default(autoincrement())
  title       String    // Título del evento
  start       DateTime  // Fecha y hora de inicio
  end         DateTime  // Fecha y hora de finalización
  description String?    // Descripción del evento (opcional)
  user        User      @relation(fields: [userId], references: [id]) // Relación con User
  userId      Int       // Foreign key a User
  createdAt   DateTime  @default(now()) // Fecha de creación
  updatedAt   DateTime  @updatedAt      // Fecha de última actualización
}

enum Role {
  USER
  ADMIN
}
